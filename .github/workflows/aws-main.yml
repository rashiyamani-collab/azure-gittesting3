name: Build  and Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: ap-south-1
      ECR_REPO: 074002960123.dkr.ecr.ap-south-1.amazonaws.com/myapp
      CLUSTER_NAME: demo-eks-dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::074002960123:role/github-oidc-rashiyamani-collab-azure-gittesting3-main
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: ecr-login
        run: |
          aws ecr get-login-password --region $AWS_REGION \
          | docker login --username AWS --password-stdin $ECR_REPO

      - name: Build and Push Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}${{ env.ECR_REPO }}:$IMAGE_TAG
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI


      # Update deployment.yaml with new image
      - name: Update Kubernetes manifests
        run: |
          sed -i "s|image:.*|image: $IMAGE_URI|g" k8s/app-deployment.yaml
          

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ap-south-1 --name demo-eks-dev

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/app-deployment.yaml
          kubectl apply -f k8s/app-service.yaml
